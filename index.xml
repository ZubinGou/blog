<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zubin`s Site</title>
    <link>https://zubing.tk/</link>
    <description>Recent content on Zubin`s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 24 Jul 2019 11:32:41 +0800</lastBuildDate>
    
        <atom:link href="https://zubing.tk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>零基础用 GitHub Pages &#43; Hugo 搭建个人网站</title>
      <link>https://zubing.tk/2019/blog/</link>
      <pubDate>Wed, 24 Jul 2019 11:32:41 +0800</pubDate>
      
      <guid>https://zubing.tk/2019/blog/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;是用Go编写的静态站点生成器,生成速度（不到1s）比其他生成器快了许多,且配置比Hexo等简单，目前主要存在的缺点是主题不够丰富和成熟、插件较少。&lt;/p&gt;

&lt;p&gt;话不多说，开始搭建~&lt;/p&gt;

&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=1 depthTo=6 orderedList=false} --&gt;

&lt;!-- code_chunk_output --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建github-pages&#34;&gt;创建GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装hugo和git&#34;&gt;安装Hugo和Git&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装hugo&#34;&gt;安装Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#macos使用homebrew&#34;&gt;macOS使用Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#windows使用chocolatey&#34;&gt;Windows使用Chocolatey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装git&#34;&gt;安装Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#创建site-生成网站&#34;&gt;创建Site 生成网站&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建site&#34;&gt;创建site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装主题&#34;&gt;安装主题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置模版&#34;&gt;设置模版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#配置-configtoml&#34;&gt;配置 config.toml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#生成草稿网站&#34;&gt;生成草稿网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#发布到github-pages&#34;&gt;发布到GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#主题优化&#34;&gt;主题优化&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#解决黑色主题闪屏问题&#34;&gt;解决黑色主题闪屏问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#站点流量统计&#34;&gt;站点流量统计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#博客目录&#34;&gt;博客目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#站内搜索&#34;&gt;站内搜索&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /code_chunk_output --&gt;

&lt;h2 id=&#34;创建github-pages&#34;&gt;创建GitHub Pages&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;在GitHub新建一个Repository命名为[你的GitHub账户名].github.io，其他可以不用填写，直接创建即可。
&lt;img src=&#34;https://i.loli.net/2019/07/25/5d3921d01ab8273139.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;进入刚创建的Repository，点击右边的Settings，下滑找到GitHub Pages，点击&lt;code&gt;Choose a theme&lt;/code&gt;，随意选择一个theme（因为不会用到），点击&lt;code&gt;commit changes&lt;/code&gt;就创建完成了。
&lt;img src=&#34;https://i.loli.net/2019/07/25/5d3921cf7347e79810.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;安装hugo和git&#34;&gt;安装Hugo和Git&lt;/h2&gt;

&lt;h3 id=&#34;安装hugo&#34;&gt;安装Hugo&lt;/h3&gt;

&lt;h4 id=&#34;macos使用homebrew&#34;&gt;macOS使用Homebrew&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;windows使用chocolatey&#34;&gt;Windows使用Chocolatey&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install hugo -confirm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;详见 &lt;a href=&#34;https://gohugo.io/getting-started/installing&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gohugo.io/getting-started/installing&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;安装git&#34;&gt;安装Git&lt;/h3&gt;

&lt;p&gt;在&lt;a href=&#34;https://git-scm.com/downloads&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Git官网&lt;/a&gt;下载安装。&lt;/p&gt;

&lt;p&gt;命令行输入 &lt;code&gt;git version&lt;/code&gt; 显示 Git 的版本号，说明安装成功。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注意需要将 Hugo 和 Git 安装目录都加入系统Path环境变量。&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;创建site-生成网站&#34;&gt;创建Site 生成网站&lt;/h2&gt;

&lt;h3 id=&#34;创建site&#34;&gt;创建site&lt;/h3&gt;

&lt;p&gt;在用来存放博客的路径下，命令行执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site mysite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该命令创建一个名为 &lt;code&gt;mysite&lt;/code&gt; 的文件夹来存放你的博客。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mysite&lt;/code&gt; 的目录结构如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;·
├── archetypes      // .md 博客原型 模版
├── content         // .md 存放你写的 Markdown 文件
├── data            // YAML, JSON, or TOML等配置文件
├── layouts         // .html 网站模版
├── static          // images, CSS, JavaScript 等，决定网站的外观。
├── themes          // 存放网站主题
└── config.toml     // 网站的配置文件
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装主题&#34;&gt;安装主题&lt;/h3&gt;

&lt;p&gt;你可以在&lt;a href=&#34;https://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;主题&lt;/a&gt;选择自己喜欢的主题，
本站使用的是 &lt;a href=&#34;https://themes.gohugo.io/leaveit/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;LeaveIt&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd mysite/themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入该文件夹用来存放主题的文件夹, 执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/liuzc/LeaveIt.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;设置模版&#34;&gt;设置模版&lt;/h3&gt;

&lt;p&gt;回到&lt;code&gt;mysite&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打开 &lt;code&gt;mysite/archetypes&lt;/code&gt; 目录下的 模版 &lt;code&gt;default.md&lt;/code&gt; ，更改为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
title = &amp;quot;{{ replace .Name &amp;quot;-&amp;quot; &amp;quot; &amp;quot; | title }}&amp;quot; # 文章标题
date = {{ .Date }}  # 自动添加日期
draft = true        # 是否为草稿
categories = [&amp;quot;&amp;quot;]   # 目录（数组）
tags = [&amp;quot;&amp;quot;]         # 标签（数组）
description = &amp;quot;&amp;quot;        # 描述
comments = true     # 是否开启评论
share = true        # 是否开启分享
+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new about.md
hugo new posts/firstBlog.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 &lt;code&gt;content&lt;/code&gt; 文件夹创建 &lt;code&gt;about.md&lt;/code&gt; 和 &lt;code&gt;firstBlog.md&lt;/code&gt; ，打开他们随意输入些内容。&lt;/p&gt;

&lt;h3 id=&#34;配置-config-toml&#34;&gt;配置 config.toml&lt;/h3&gt;

&lt;p&gt;按照以下 &lt;code&gt;config.toml&lt;/code&gt; 模板更改, 不知道的可以先空着。&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;mysite/static&lt;/code&gt; 文件夹中新建 &lt;code&gt;images&lt;/code&gt; 文件夹，将你的头像文件放入其中。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseURL = &amp;quot;https://[你的GirHub用户名].github.io&amp;quot;
title = &amp;quot;My Site&amp;quot; # 网站标题
languageCode = &amp;quot;zh-cn&amp;quot; # 语言
hasCJKLanguage = true # 字数统计时统计汉字
theme = &amp;quot;LeaveIt&amp;quot; # 主题
paginate = 10 # 每页博客数
enableEmoji = true # 支持 Emoji
enableRobotsTXT = true # 支持 robots.txt
googleAnalytics = &amp;quot;&amp;quot; # Google 统计 id
preserveTaxonomyNames = true
[blackfriday]  # Markdown 渲染引擎
  hrefTargetBlank = true # Open external links in a new window/tab.
  nofollowLinks = true
  noreferrerLinks = true
[Permalinks]
 posts = &amp;quot;/:year/:month/:title/&amp;quot;
[menu]
  [[menu.main]]
    name = &amp;quot;Blog&amp;quot;
    url = &amp;quot;/posts/&amp;quot;
    weight = 1
  [[menu.main]]
    name = &amp;quot;Categories&amp;quot;
    url = &amp;quot;/categories/&amp;quot;
    weight = 2
  [[menu.main]]
    name = &amp;quot;Tags&amp;quot;
    url = &amp;quot;/tags/&amp;quot;
    weight = 3
  [[menu.main]]
    name = &amp;quot;About&amp;quot;
    url = &amp;quot;/about/&amp;quot;
    weight = 4
[params]
    since = 2019
    author = &amp;quot;你的名字&amp;quot;
    avatar = &amp;quot;/images/avatar.png&amp;quot; # 头像文件路径           
    subtitle = &amp;quot;Hugo is Absurdly Fast!&amp;quot;
    home_mode = &amp;quot;&amp;quot; # 填post则在首页post博客
    enableGitalk = true # gitalk 评论系统
    google_verification = &amp;quot;&amp;quot;
    description = &amp;quot;&amp;quot; # 描述
    keywords = &amp;quot;&amp;quot; # site keywords
    beian = &amp;quot;&amp;quot;
    baiduAnalytics = &amp;quot;&amp;quot;
    license= &#39;本文采用&amp;lt;a rel=&amp;quot;license&amp;quot; href=&amp;quot;http://creativecommons.org/licenses/by-nc/4.0/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;知识共享署名-非商业性使用 4.0 国际许可协议&amp;lt;/a&amp;gt;进行许可&#39;
[params.social]
    GitHub = &amp;quot;&amp;quot;
    Twitter = &amp;quot;&amp;quot;
    Email   = &amp;quot;&amp;quot;
    Instagram = &amp;quot;&amp;quot;
    Wechat = &amp;quot;/images/me/wechat.png&amp;quot;  # Wechat QRcode image
    Facebook = &amp;quot;&amp;quot;
    Telegram = &amp;quot;&amp;quot;
    Dribbble = &amp;quot;&amp;quot;
    Medium = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;生成草稿网站&#34;&gt;生成草稿网站&lt;/h3&gt;

&lt;p&gt;配置完 &lt;code&gt;config.toml&lt;/code&gt; 后在 &lt;code&gt;mysite&lt;/code&gt; 文件夹执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server -D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打开 &lt;a href=&#34;http://localhost:1313/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:1313/&lt;/a&gt; 即可查看生成的静态网站啦。&lt;/p&gt;

&lt;h2 id=&#34;发布到github-pages&#34;&gt;发布到GitHub Pages&lt;/h2&gt;

&lt;p&gt;生成网站命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成网站存储在 public 文件夹中。&lt;/p&gt;

&lt;p&gt;执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入 public 文件夹，然后：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
git remote add origin https://github.com/[Github 用户名]/[Github 用户名].github.io.git
git add .
git commit -m &amp;quot;init commit&amp;quot;
git push -u origin master -f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里 &lt;code&gt;-u origin master&lt;/code&gt; 指定了默认主机，后面可以不加参数直接push了。&lt;/p&gt;

&lt;p&gt;以后再发布时的命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add .
git commit -m &amp;quot;the commit message&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来稍等片刻你便可以在  https://[你的GitHub用户名].github.io/ 访问你的网站啦！&lt;/p&gt;

&lt;h2 id=&#34;主题优化&#34;&gt;主题优化&lt;/h2&gt;

&lt;p&gt;下面主要是对 &lt;a href=&#34;https://themes.gohugo.io/leaveit/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;LeaveIt&lt;/a&gt; 主题的一些优化。&lt;/p&gt;

&lt;h3 id=&#34;解决黑色主题闪屏问题&#34;&gt;解决黑色主题闪屏问题&lt;/h3&gt;

&lt;p&gt;切换为黑色主题后，每次打开新页面都会网页都会闪一下，&lt;span class=&#34;spoiler&#34; &gt;亮瞎狗眼有没有！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;解决方法只需要更改 &lt;code&gt;mysite/themes/LeaveIt/layouts/_default/baseof.html&lt;/code&gt; 的一行代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body class=&amp;quot;dark-theme &amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将默认加载的主题设为黑色即可。&lt;/p&gt;

&lt;h3 id=&#34;站点流量统计&#34;&gt;站点流量统计&lt;/h3&gt;

&lt;p&gt;利用&lt;a href=&#34;https://busuanzi.ibruce.info/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;不蒜子&lt;/a&gt;，两行代码实现访问量统计，将以下代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加在 &lt;code&gt;mysite/themes/LeaveIt/layouts/partials/head.html&lt;/code&gt; 的&lt;code&gt;head&lt;/code&gt;标签中。
再将以下代码加到需要的位置即可：&lt;/p&gt;

&lt;p&gt;网站总访问量Page View:(可以放在&lt;code&gt;partials/footer.html&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &amp;lt;span id=&amp;quot;busuanzi_container_site_pv&amp;quot;&amp;gt;本站总访问量&amp;lt;span id=&amp;quot;busuanzi_value_site_pv&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;次&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;网站总访客数Unique Visitor:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span id=&amp;quot;busuanzi_container_site_uv&amp;quot;&amp;gt;您是第&amp;lt;span id=&amp;quot;busuanzi_value_site_uv&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;位访客&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;博客总阅读量:（放在&lt;code&gt;_default/simple.html&lt;/code&gt;）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span id=&amp;quot;busuanzi_container_site_pv&amp;quot;&amp;gt;本文总阅读量&amp;lt;span id=&amp;quot;busuanzi_value_page_pv&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;次&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;博客目录&#34;&gt;博客目录&lt;/h3&gt;

&lt;h3 id=&#34;站内搜索&#34;&gt;站内搜索&lt;/h3&gt;

&lt;p&gt;留点坑，有空再来填。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;最后，致谢GitHub, Hugo, &lt;a href=&#34;https://github.com/liuzc/leaveit&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;LeaveIt&lt;/a&gt;, 和博主&lt;a href=&#34;https://mogeko.me/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Mogeko&lt;/a&gt;！&lt;/p&gt;

&lt;p&gt;添加个人域名、CDN、评论区等更多优化可以参考&lt;a href=&#34;https://mogeko.me/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Mogeko&lt;/a&gt;的&lt;a href=&#34;https://mogeko.me/2018/025/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;博客&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zubing.tk/about/</link>
      <pubDate>Tue, 23 Jul 2019 10:32:48 +0800</pubDate>
      
      <guid>https://zubing.tk/about/</guid>
      <description>

&lt;h3 id=&#34;zubin-gou&#34;&gt;Zubin Gou😜&lt;/h3&gt;

&lt;p&gt;BUPT | CS&lt;/p&gt;

&lt;h3 id=&#34;interests&#34;&gt;Interests&lt;/h3&gt;

&lt;p&gt;Reading | Movie | Fitness | Programming&lt;/p&gt;

&lt;h3 id=&#34;blog&#34;&gt;Blog&lt;/h3&gt;

&lt;p&gt;Record my growth.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;div&gt;
Tempus fugit: &lt;SPAN id=span_dt_dt style=&#34;color: #0196e3;&#34;&gt;&lt;/SPAN&gt;
&lt;SCRIPT language=javascript&gt;
function show_date_time(){
window.setTimeout(&#34;show_date_time()&#34;, 1000);
BirthDay=new Date(&#34;7/22/2019 00:00:00&#34;);//日期自己修改
today=new Date();
timeold=(today.getTime()-BirthDay.getTime());
sectimeold=timeold/1000
secondsold=Math.floor(sectimeold);
msPerDay=24*60*60*1000
e_daysold=timeold/msPerDay
daysold=Math.floor(e_daysold);
e_hrsold=(e_daysold-daysold)*24;
hrsold=Math.floor(e_hrsold);
e_minsold=(e_hrsold-hrsold)*60;
minsold=Math.floor((e_hrsold-hrsold)*60);
seconds=Math.floor((e_minsold-minsold)*60);
span_dt_dt.innerHTML=&#34;&#34;+daysold+&#34;days &#34;+hrsold+&#34;h &#34;+minsold+&#34;min &#34;+seconds+&#34;s&#34;;
}
show_date_time();
&lt;/SCRIPT&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;span id=&#34;busuanzi_container_site_pv&#34;&gt;Page View: &lt;span id=&#34;busuanzi_value_site_pv&#34;&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span id=&#34;busuanzi_container_site_pv&#34;&gt;Unique Visitor: &lt;span id=&#34;busuanzi_value_site_uv&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;copyright&#34;&gt;Copyright&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This work is licensed under a &lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Creative Commons Attribution-NonCommercial 4.0 International License&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Please indicate the source for non-commercial reprint.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>虚无、意义与存在主义      --《未来简史》读罢的思考</title>
      <link>https://zubing.tk/2019/nihilism/</link>
      <pubDate>Sat, 11 May 2019 08:27:18 +0800</pubDate>
      
      <guid>https://zubing.tk/2019/nihilism/</guid>
      <description>&lt;p&gt;我曾一度陷入虚无主义。&lt;/p&gt;

&lt;p&gt;曾几何时，思索、彷徨、恐惧。寄蜉蝣于天地，渺沧海之一粟。哀吾生之须臾，羡长江之无穷。我们终究在茫茫宇宙中消逝，不激起一丝涟漪，荡然无存哉！&lt;/p&gt;

&lt;p&gt;这是在幼年和少年的我脑中徘徊、周旋的一大命题。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;当我认真思索，往往发现所谓的“人生的意义”往往是虚构的、人为设定的，“我与我周旋久”，却不知如何做我。邂逅存在主义，加缪、萨特都甚得我心，“人是在无意义的宇宙中生活，人的存在本身也没有意义，但人可以在原有存在的基础上自我塑造、自我成就，活得精彩，从而拥有意义。”我认为人生本质上没有意义，是我们赋予了其意义，那么我们终将面临死亡，人活着有什么意义呢？对死亡的焦虑与恐惧，在虚无中竭力嘶吼，却发现被扼住了喉咙，恰如一种鬼压床的惊悚体验。从心理学的角度，这或许只是低多巴胺水平者在无所事事时的臆想，但这十足困扰了我很多年。&lt;/p&gt;

&lt;p&gt;知乎上关于人生意义的答案往往诉诸享乐主义，做疯狂的智者，还是健全的蠢货？而《存在主义心理治疗》却在选择了“逃避”—“面对无意义，人只能让自己沉浸在生活的洪流之中，让疑问随水流逝。”而这不是我要的答案。&lt;/p&gt;

&lt;p&gt;可我愈是寻觅，愈是”求而不得“。而身边的朋友似乎很少有这种困惑，我亦难觅共鸣。读《月亮与六便士》的一段话，感触颇深:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我们每个人生在世界上都是孤独的。每个人都被囚禁在一座铁塔里，只能靠一些符号同别人传达自己的思想；而这些符号并没有共同的价值，因此它们的意义是模糊的、不确定的。我们非常可怜地想把自己心中的财富传送给别人，但是他们却没有接受这些财富的能力。因此我们只能孤独的行走，尽管身体相互依傍却并不在一起，既不了解别的人也不能为别人所了解。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我们仿佛生来就是无意义的孤岛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;心理学课的老师探讨了“人生脚本”，让我印象深刻，“人生脚本”是我们童年时针对自己的一生所作出的无意识的计划和决定，作为一种生存策略，包括了一些核心信念，被父母所强化，从生活的经验中得到“证实”，经过选择而达到高潮。如果没有个人和外界的有意干预，它会走向预定的结局。这不是在谈“宿命论”，而是说环境作用于潜意识，而潜意识规划人生。这更加印证了我的想法。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;后来，我接触了尤瓦尔·赫拉利这位犀利的历史学家，我发现他比我想得通透得多。首先是他击碎了我关于人类自由意志的残余幻想，他指出了自由意志的假象（即物理主义）：简单来讲，人是环境的产物，是自然规律的一部分，镂刻在深处的基因与环境的输入加上一些随机因素，产生的生化反应决定了我们的行为，然后我们再以为这是自己的“自由意志&amp;rdquo;所决定的行为（著名而骇人的裂脑实验）。人类和其他生物一样，都知识一堆算法，所有的生命都是在进行数据处理。仿佛人类像个机器学习model，在训练中不断拟合，由广义的应激反应所主宰（诚然我们大多数行为都是潜意识的不自觉行为）。&lt;/p&gt;

&lt;p&gt;更有甚者，他直白的谈到:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;人类没有灵魂，也没有心灵。事实上，人类有的就是一条意识流，欲望会在这条意识流中起伏来去，并没有什么永远不变的自我能够拥有这些欲望。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我们自诩万物之长，实则同鸟兽无异。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;为什么思而不得，愈是思考与寻求意义，愈是不得、愈是迷惘呢？&lt;/p&gt;

&lt;p&gt;因为，从本质上讲，人生没有任何意义，而追寻意义这一行为也是荒诞的。这样每个人都在无意义的基础上赋予了生命以自己构想的“意义”（以及集体构建的种种“故事”），故而每个人甚至能有不同的意义（意义依附于人，存在先与本质）。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;寻求意义这一行为来自有了“我”之后，并不是因为某种意义而存在，而是因为存在而且寻找意义。意义的存在，很大程度上源于对终将消亡的宿命的恐惧。&lt;/p&gt;

&lt;p&gt;愈是被赋予巨大意义的事物，往往愈是缺乏意义、趋于消亡而没有本身没有意义（譬如爱情、贫穷）。因为意义的存在，不过是为了欺骗低多巴胺水平者（还是自然选择），抵抗其内在的空虚与自我价值的迷失，使之能继续存在而传递基因（“爱情不过是一种肮脏的诡计，它欺骗我们去完成传宗接代的任务”，瞧瞧毛姆这毒舌!🤣）。这些本身都是自然规律的一部分，我们按照自然规律存在与消亡，而人类为了自欺强行赋予了其伟大的意义。&lt;/p&gt;

&lt;p&gt;存在主义所谓在无意义之上”赋予意义&amp;rdquo;，其实是心理需求的外在体现（马斯洛），终究是为基因服务。这样来看，萨特的自由、存在与个人，尼采的“强力”与超人，嘿嘿，也不过尔尔。（望哲人海涵业余人士在此“妄加评判”。）&lt;/p&gt;

&lt;p&gt;而我也发现，这些想法与《自私的基因》中解剖的人类行为相契合，我们的存在，不过是服务于演化，我们的行为，也深刻的桎梏于基因。&lt;/p&gt;

&lt;p&gt;由此观之，从某种程度上讲，人生脚本即是人这一自然规律通过所谓的“基本驱力”驱动的外在体现。我们通过构想“意义”来解释脚本，实则因果倒置了，有趣的是，这种事后解释而不自知的行为恰如从“裂脑人”更底层的自我欺骗中分形出来的。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;所以就真的“没意义”了么？或者说，没有意义是可怕、令人悲伤的吗？&lt;/p&gt;

&lt;p&gt;恰恰相反。没有所谓的意义，正如加缪所言“人生越没有意义越值得过”，白纸上作画，我们会更加自由，摆脱种种囹圄，超脱即是如斯。王小波说“人都是为了要表演，失去了自己的存在”，而接纳人生在本质上不具有意义，接纳自己不需要意义，“我”本是自然规律的一部分，这样，我们会从本真上热爱生活。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;strong&gt;后记&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这些思考恐怕难以引起广泛的共鸣。首先是不同人看待问题的方式和角度不同，因为这个”意义“的定义因人而异，有人硬要说他存在的意义就是追求xx（大多是多巴胺成瘾，反作用驱动并强化行为，为了解释行为而赋予意义）,而这也无可厚非；其次，因为自然选择淘汰了认为人生&amp;rdquo;无意义“者，而留下了”快乐“的人们，加上现代社会泛娱乐、享乐主义与消费主义的盛行，绝大多数人从来不缺多巴胺，以至于他们不会去思索、纠结这类问题。&lt;/p&gt;

&lt;p&gt;这种“无意义”价值观并非站在鄙视链顶端否定高多巴胺水平者为自己的生命所赋予的种种意义（享乐主义、虚无主义和自由主义等及其副产物&amp;ndash;“充实感”），在我看来，每个人都可以选择自己的价值观念和生活方式。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;尤瓦尔, 赫拉利. 未来简史[J]. 全国新书目, 2017 (2): 26-27.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;R.道金斯, 道金斯, 卢允中,等. 自私的基因[M]. 1956.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;肖静宁. “裂脑人”的研究及其哲学思考[J]. 武汉大学学报：人文科学版, 1985(4):39-45.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>机器学习写诗项目-AI诗人</title>
      <link>https://zubing.tk/2019/ai_poet/</link>
      <pubDate>Sun, 10 Feb 2019 11:32:41 +0800</pubDate>
      
      <guid>https://zubing.tk/2019/ai_poet/</guid>
      <description>

&lt;p&gt;这是我大一上学期写的Python期末大作业，主要涉及爬虫、自然语言处理、数据分析与可视化、规则作诗、基于TensorFlow的机器学习写诗（改改模版、调调参数、烧烧GPU），以下是实验报告的部分内容，新手诸多谬误，还望指正😂。&lt;/p&gt;

&lt;p&gt;GitHub地址:&lt;a href=&#34;https://github.com/ZubinGou/AI_Poet_Totoro&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/ZubinGou/AI_Poet_Totoro&lt;/a&gt;&lt;/p&gt;

&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=1 depthTo=6 orderedList=false} --&gt;

&lt;!-- code_chunk_output --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#一-作业概述&#34;&gt;一、作业概述&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#数据抓取&#34;&gt;数据抓取&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#网易云音乐httpsmusic163com&#34;&gt;网易云音乐&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#中国诗歌网httpwwwzgshigecom&#34;&gt;中国诗歌网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#古诗文网httpswwwgushiwenorg&#34;&gt;古诗文网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#规则写诗&#34;&gt;规则写诗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-poetizepy&#34;&gt;1. poetize.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-poetize_pluspy&#34;&gt;2. poetize_plus.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#机器学习写诗&#34;&gt;机器学习写诗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-chinese_poem&#34;&gt;1. chinese_poem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-lyrics_writer&#34;&gt;2. lyrics_writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-poet_master&#34;&gt;3. poet_master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#二-数据分析&#34;&gt;二、数据分析&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#数据集词云分析&#34;&gt;数据集词云分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#云音乐数据处理与分析&#34;&gt;云音乐数据处理与分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#唐宋诗词文本挖掘&#34;&gt;唐宋诗词文本挖掘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-作家产量分析-谁是产量之王&#34;&gt;1. 作家产量分析-谁是产量之王&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-单字词字频分析-古代诗人最爱用的字眼&#34;&gt;2. 单字词字频分析-古代诗人最爱用的字眼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-多字词字频分析-诗人最爱用的词&#34;&gt;3. 多字词字频分析-诗人最爱用的词&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-宋词最受欢迎的词牌&#34;&gt;4. 宋词最受欢迎的词牌&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-诗人最爱用的动词&#34;&gt;5. 诗人最爱用的动词&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-诗人最爱用的形容词&#34;&gt;6. 诗人最爱用的形容词&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#7-诗中最常见的地名&#34;&gt;7. 诗中最常见的地名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#8-诗中的四季&#34;&gt;8. 诗中的四季&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#三-算法比较&#34;&gt;三、算法比较&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#规则写诗-1&#34;&gt;规则写诗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#机器学习写诗-1&#34;&gt;机器学习写诗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-chinese_poem-1&#34;&gt;1. chinese_poem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-lyrics_writer-1&#34;&gt;2. lyrics_writer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#四-结果分析&#34;&gt;四、结果分析&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#规则写诗结果分析&#34;&gt;规则写诗结果分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1选择五言绝句-从头到尾每个字都符合平仄的唐诗&#34;&gt;1．选择五言绝句、从头到尾每个字都符合平仄的唐诗：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2自定义韵脚-每个字都严格符合平仄要求的宋诗&#34;&gt;2．自定义韵脚、每个字都严格符合平仄要求的宋诗：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3指定词牌名作的宋词&#34;&gt;3．指定词牌名作的宋词：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4指定行数的诗经&#34;&gt;4．指定行数的诗经：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5指定句数的现代诗&#34;&gt;5．   指定句数的现代诗 ：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6自定义模式的唐诗-宋词-宋诗-诗经和现代诗&#34;&gt;6．自定义模式的唐诗、宋词、宋诗、诗经和现代诗：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#机器学习写诗结果分析&#34;&gt;机器学习写诗结果分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#chinese_poem-模仿诗人&#34;&gt;Chinese_poem  &amp;ndash;模仿诗人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lyrics_writer-作词家&#34;&gt;lyrics_writer    &amp;ndash;作词家&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poet_master&#34;&gt;poet_master&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#总结&#34;&gt;总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /code_chunk_output --&gt;

&lt;h2 id=&#34;一-作业概述&#34;&gt;一、作业概述&lt;/h2&gt;

&lt;p&gt;AI诗人-Totoro，她才华横溢，学富五车，能唐诗，善宋词，会元曲，可诗经，能模仿指定诗人，现代诗更是信手拈来，平仄押韵不在话下，更能情感识别、语义联想。
除却诗歌，满腹经纶的她一挥墨宝便是一曲媲美林夕的绝世歌词。
更加直观的了解她，可以参考&lt;a href=&#34;https://github.com/ZubinGou/AI_Poet_Totoro/blob/master/xmind.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;思维导图&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc6dfa37f159481.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;数据抓取&#34;&gt;数据抓取&lt;/h3&gt;

&lt;h4 id=&#34;网易云音乐-https-music-163-com&#34;&gt;&lt;a href=&#34;https://music.163.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;网易云音乐&lt;/a&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;数据类型：歌词&lt;/li&gt;
&lt;li&gt;数据包括：网易云音乐所有华语歌手、乐队组合的共6945位歌手的全部总计大约23.4万首歌的歌词（也即网易云音乐几乎所有中文专辑的含有歌词的歌曲的歌词），并且分为男、女和乐队组合三类。&lt;/li&gt;
&lt;li&gt;数据大小：歌词234870首，爬取数据309MB
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc73e44ef229860.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;中国诗歌网-http-www-zgshige-com&#34;&gt;&lt;a href=&#34;http://www.zgshige.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;中国诗歌网&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;数据类型：现代诗
数据包括：中国诗歌网几乎全部现代诗，约22.4万首。
数据大小：现代诗224332首，总计3755249行，爬取数据116.5MB&lt;/p&gt;

&lt;h4 id=&#34;古诗文网-https-www-gushiwen-org&#34;&gt;&lt;a href=&#34;https://www.gushiwen.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;古诗文网&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;数据类型：古诗词
数据包括：古诗词网推荐栏的全部总计10000首诗，以及诗文栏的全部“猜你喜欢”部分包含的所有总计7593首最富盛名的诗篇。
数据大小：推荐栏10000首，诗文栏7593首，合并后一共14551首诗歌，数据处理后4647KB。&lt;/p&gt;

&lt;h3 id=&#34;规则写诗&#34;&gt;规则写诗&lt;/h3&gt;

&lt;h4 id=&#34;1-poetize-py&#34;&gt;1. poetize.py&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;只需双击运行即可根据提示生成诗歌&lt;/li&gt;
&lt;li&gt;输入：序号用来选择语料库、格式要求等
也可以自定义格式：输入词性对应的简码，自动生成古诗、词、诗经和现代诗，详见代码以及自由创作时根据提示输入h获取的帮助。&lt;/li&gt;
&lt;li&gt;输出：符合要求的唐诗、宋词、宋诗、诗经、现代诗&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-poetize-plus-py&#34;&gt;2. poetize_plus.py&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;在之前的基础上加入了平仄和押韵，平仄每个字都严格遵守古诗平仄要求，押韵严格遵守十三辙要求，并且符合根据首句是否押韵而平仄不同的古诗音韵和谐的要求。&lt;/li&gt;
&lt;li&gt;还自定义韵脚，方式为输入一串字符，程序将自动识别最后一个字的韵脚在十三辙中属于第几辙，生成押这个辙的古诗。&lt;/li&gt;
&lt;li&gt;接入了自然语言处理库snowNLP，用于情感倾向分析。Demo：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc7a269aac95644.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;机器学习写诗&#34;&gt;机器学习写诗&lt;/h3&gt;

&lt;h4 id=&#34;1-chinese-poem&#34;&gt;1. chinese_poem&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;根据输入的诗人，读模仿其风格创作诗词&lt;/li&gt;
&lt;li&gt;输入：&lt;code&gt;python main.py -m train/test/head -p 李白/杜甫/苏轼/白居易......&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;输出：模仿该诗人风格的诗词&lt;/li&gt;
&lt;li&gt;创作前首先进行train训练，250个epoch左右就基本拟合了。理论上可以模仿任何产量不是太低的诗人，只需简单修改dataset内的“提取诗人.py”文件，即可提取其诗歌，然后按照上述输入格式运行训练即可，不用更改main.py文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-lyrics-writer&#34;&gt;2. lyrics_writer&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;输入语料库类型和开头，自动写歌词/现代诗&lt;/li&gt;
&lt;li&gt;输入：&lt;code&gt;python main.py 0/1 -cd 华语男歌手/华语女歌手/modern/华语乐队与组合&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;输出：给定开头的歌词/现代诗&lt;/li&gt;
&lt;li&gt;0表示训练，1表示创作，-cd传入训练的内容，无需更改文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;3-poet-master&#34;&gt;3. poet_master&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;机器学习创作自由诗、押韵诗、藏头诗、藏字诗&lt;/li&gt;
&lt;li&gt;输入：
自由诗： &lt;code&gt;python main.py 1&lt;/code&gt;
押韵诗： &lt;code&gt;python main.py 2&lt;/code&gt;
藏头诗： &lt;code&gt;python main.py 3 四个汉字&lt;/code&gt;
藏字诗： &lt;code&gt;python main.py 4 随意数量汉字，将尽可能全部覆盖&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;更改自github上star上百的在网页上写诗的&lt;a href=&#34;https://github.com/norybaby/poet&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;小诗姬&lt;/a&gt;，改成了命令行版本。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;二-数据分析&#34;&gt;二、数据分析&lt;/h2&gt;

&lt;h3 id=&#34;数据集词云分析&#34;&gt;数据集词云分析&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;现代诗词云：可见一开头的双字词最为现代诗人所喜爱，生命、落叶等表面现代诗的哲思性，以及思念、温暖、温柔展现了诗歌抒情的一面。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc8af7888140883.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;诗经词云：君子、四方、我心在意料之内，这个“上帝”出乎意料，查阅资料发现，诗经中绝大部分“上帝”都是指至高神。有几处“上帝”被汉儒解释为“君主”，也是借至高神上帝之地位、权势喻指君主。可以对古代的神学与宗教管窥蠡测一般。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc8cb91dca45278.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;部分歌词词云：主要是周杰伦的歌词，可以看到，Jay Chou最爱用“我们”、“没有”、“自己”、“知道”这类的字眼(未设置停用词的结果)。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc8f00cefc69561.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;唐诗词云
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc9449ba4885629.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;宋词词云
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc963d2da516202.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;云音乐数据处理与分析&#34;&gt;云音乐数据处理与分析&lt;/h3&gt;

&lt;p&gt;对网易云爬取的全部诗歌进行了清洗、繁简替换、去重并按照歌手类型整合、分词，接下来进行数据分析，由于生成的是html格式，并有动画效果和详尽标签，下面仅展示截图。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bc991e817d99061.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bca5846deb22046.png&#34; alt=&#34;华语女歌手字频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bca907c7a282387.png&#34; alt=&#34;华语男歌手字频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcaaf05eab65941.png&#34; alt=&#34;乐队&amp;amp;组合字频&#34; /&gt;
我们可以看到不论男女歌手还是乐队，前5高频字大致相同，很有趣的是男女歌手使用“爱”字频率较高，然而乐队组合使用“爱”字频率却大幅下降，难道一群人就不好意思谈情说爱了吗？
再来看词频分析：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcaf7dfee937820.png&#34; alt=&#34;女歌手词频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcb12a7f8b77996.png&#34; alt=&#34;男歌手词频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcb25c5fe555619.png&#34; alt=&#34;乐队组合词频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcba3a2f1a24026.png&#34; alt=&#34;女歌手词云&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcb6ba018544774.png&#34; alt=&#34;男歌手词云&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我们（胡乱）分析出以下特点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;乐队组合使用“我们”的频率明显高于男女歌手，可见乐队的团结&lt;/li&gt;
&lt;li&gt;就形容词而言，女歌手爱用“永远”、“幸福”、”快乐”、”寂寞”、”美丽”，而男歌手似乎没有那么善于描述,爱用“幸福”、“快乐”和生怕别人不相信的“真的”，而乐队很有趣的不谈“幸福”，爱说“快乐“，可见有一群小伙伴都忘却“爱情”和“幸福”而十分“快乐”了，嘿嘿。&lt;/li&gt;
&lt;li&gt;整体来看，男歌手使用“不是”、“不要”、“就是”等理性的判断词要高于女歌手，的确我们的男同志们是要“理智”一点呀！&lt;/li&gt;
&lt;li&gt;女歌手的“心里”等表现出女生更喜欢表述自己，而男歌手的理性词则反映其更爱描述客观真理和事实。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;整体上男女有理性和感性的倾向差别。&lt;/p&gt;

&lt;h3 id=&#34;唐宋诗词文本挖掘&#34;&gt;唐宋诗词文本挖掘&lt;/h3&gt;

&lt;p&gt;由于图表比较多，均为html文件，可以点击文件查看获取详尽数据。这里受制于篇幅，仅分析其中一部分。可以运行文件目录下的.py文件，生成图表，同时打印出对应的数据。&lt;/p&gt;

&lt;h4 id=&#34;1-作家产量分析-谁是产量之王&#34;&gt;1. 作家产量分析-谁是产量之王&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcc06a66a220534.png&#34; alt=&#34;唐诗高产作家&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcc1bbd91894907.png&#34; alt=&#34;宋诗高产作家&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcc3b7e0e467603.png&#34; alt=&#34;宋词高产作家&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;就唐诗而言，“七分剑气，三分月光，秀口一吐，半个盛唐”，我们的李杜诗篇万口传，但白居易写诗，产量之高，在唐代诗人中无人能敌。&lt;/li&gt;
&lt;li&gt;再看宋诗，陆游一生笔耕不辍，作诗达万余首，自称“六十年间万首诗”，存世的诗仍有九千三百余首，是历史上存诗数量最多的诗人，当之无愧的榜首。但经查阅资料，发现一位英雄被我的数据所“埋没”了：历史上写诗数量最多的诗人—杨万里，屈居第三，杨万里一生极为勤奋，写诗达两万余首，为史上之最！可惜的是，其诗作传世的仅有四千余首，所有我得到的数据中他的诗也就没那么多了，相比之下反而让陆游拔得头筹！&lt;/li&gt;
&lt;li&gt;最后看宋词，山东诗人辛弃疾的传世作品共有800多首，堪称词作高产作家，而苏轼也不甘落后，位居第三。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-单字词字频分析-古代诗人最爱用的字眼&#34;&gt;2. 单字词字频分析-古代诗人最爱用的字眼&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcc9eddf6497661.png&#34; alt=&#34;唐诗单字词字频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bccac402e446319.png&#34; alt=&#34;宋诗单字词字频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bccbce9cce18351.png&#34; alt=&#34;宋词单字词字频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从词云中看到，不论唐诗、宋词还是宋诗，最常用的单字词都是“人”、“月”、“风”、“云”、“梦“等，“人”字排行第一，这体现了《说文解字》里所讲的“人，天地之性最贵者也”，说明唐诗很好的秉承了“以人为本”的中华文化。而后续的“山”“风”“月”“日”“天”“云”“春”等都是在写景的诗句里经常出现的意象。&lt;/p&gt;

&lt;h4 id=&#34;3-多字词字频分析-诗人最爱用的词&#34;&gt;3. 多字词字频分析-诗人最爱用的词&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcd7a5f22985146.png&#34; alt=&#34;唐诗词频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcdc3af77196414.png&#34; alt=&#34;宋诗词频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcda06024d54835.png&#34; alt=&#34;宋词词频&#34; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，关于“风”的词是唐宋诗词人最爱用的，“东风”、“西风”、“春风”、“秋风”、“风月”、“风雨”甚至还有“风流”，看来诗人们对这些自然景物情有独钟，诸如“白云”、“梅花”、“芳草”等等。&lt;/p&gt;

&lt;h4 id=&#34;4-宋词最受欢迎的词牌&#34;&gt;4. 宋词最受欢迎的词牌&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcdf320a9680637.png&#34; alt=&#34;宋词最受欢迎的词牌&#34; /&gt;&lt;/p&gt;

&lt;p&gt;《浣溪沙》受到宋代婉约、豪放两派的共同青睐， 高居榜首，同时《水调歌头》、《鹧鸪天》、《满江红》等也是我们耳熟能详的。&lt;/p&gt;

&lt;h4 id=&#34;5-诗人最爱用的动词&#34;&gt;5. 诗人最爱用的动词&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bce3305b8495417.png&#34; alt=&#34;唐诗动词排行&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bce51b55f227857.png&#34; alt=&#34;宋诗动词排行&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bce641264b14308.png&#34; alt=&#34;宋词动词排行&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;我们很明显看到，诗人更偏爱“不”字系的词语，而词人更爱用“归”字系的词词，这可能和宋代婉约词派的有关。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;从“相思”、“相逢”、“回首”、“别离”来看，表现了诗词的“人本”情怀，还是以抒发情感为主。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;6-诗人最爱用的形容词&#34;&gt;6. 诗人最爱用的形容词&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcebe9314038971.png&#34; alt=&#34;唐诗形容词排行&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcef0294db31540.png&#34; alt=&#34;宋词形容词排行&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;毋庸置疑，诗人最爱用的形容词是“寂寞”，诗人们还真都挺孤独的。&lt;/li&gt;
&lt;li&gt;对比唐诗两朝诗词，很明显的发现宋代诗词中“富贵”一词的频率相比之下极高，为什么呢？根据时代背景推测，唐朝太平盛世，而宋朝战乱纷纷，黎民饥寒，饿殍遍野，尤其南宋更是迁都临安，几近灭亡，如此纷乱之世，自然激起了诗人们的同情，宋代诗词人们一方面描绘“凄凉”、“萧条”之现世，一方面也揭露王孙子弟的“富贵”背后的丑恶，也盼望庶民在乱世饥寒中能够“富贵”起来。（一本正经地扯蛋…）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;7-诗中最常见的地名&#34;&gt;7. 诗中最常见的地名&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcf4587db970379.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;宋词人还是偏爱“江南”的，不禁让人想起小学的宋词：忆江南：
江南好，风景旧曾谙。日出江花红胜火，春来江水绿如蓝。能不忆江南？&lt;/p&gt;

&lt;h4 id=&#34;8-诗中的四季&#34;&gt;8. 诗中的四季&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcf5c2f11687050.png&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcf6579e5280325.png&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcf6d606ae10064.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;自古逢秋悲寂寥，我言秋日胜春朝。在古诗词里，伤春、惜春是常见的春诗题材，而萧瑟凄凉的秋日更是引起诗人“诗兴大发”的季节，它们占比如此之高也不足为奇，而对于炎热的夏天和寒冷的冬天，诗人似乎没有那么多情怀了，并且随着时代推移，“冬” 和“夏”的使用频率也越来越少，或许是诗人们更喜欢用“接天莲叶无穷碧，映日荷花别样红”这样的意象来描绘这两个季节吧！&lt;/p&gt;

&lt;h2 id=&#34;三-算法比较&#34;&gt;三、算法比较&lt;/h2&gt;

&lt;h3 id=&#34;规则写诗-1&#34;&gt;规则写诗&lt;/h3&gt;

&lt;p&gt;规则写诗用到了jieba的关键词提取算法textrank和extract_tags，将每种词性的词分别提取出来，然后采用一种词性模式匹配的算法，比如词性序列“aannv, vdsss”,最大长度地匹配相同字符长度，从“aa”开始，在语料库中随机匹配2个字长度的形容词，然后到继续匹配后面的序列，这样就可生成诗歌。&lt;/p&gt;

&lt;p&gt;词性对应下图。每个词性都是一类词的全体集合。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcfb00e7fa17260.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;采用这种“万能的”写诗方法，还可以在内部内置词牌的格式，如下图。用户也可以自由输入模式，自动生成诗歌。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bcfc171c9250623.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;押韵部分采用了严格的“十三辙”分类要求，如下图所示。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd042605bc93297.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;押韵也分为首句押和首句不押，对应的平仄不同，严格遵守了音韵学的要求，但是受制于语料库只提取了1000词左右，有些韵脚可能会无法匹配，我设置了超过一定匹配次数，就停止匹配。
对于平仄部分，同样完美符合古诗词平仄的要求。算法也是采用了模式匹配的办法。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd0729876e46656.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;以从语料库中匹配到的词为单位，这样算法复杂度更低。利用如下函数判断：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd097f30d027637.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;输入为词和对应的平仄要求，依次判断每个字是否满足要求。
另外由于诗个平仄音韵的要求根据首句是否押韵也不同，程序也巧妙地实现了，代码有详尽注释，不再赘述。&lt;/p&gt;

&lt;p&gt;简要流程图如下：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd0ae4fd3987752.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;机器学习写诗-1&#34;&gt;机器学习写诗&lt;/h3&gt;

&lt;p&gt;由于使用的模型较多，在此选择几个做简单分析。代码中加有注释。&lt;/p&gt;

&lt;h4 id=&#34;1-chinese-poem-1&#34;&gt;1. chinese_poem&lt;/h4&gt;

&lt;p&gt;使用了LSTM神经网络，基于tensorflow的机器学习写诗模型。我利用它来做了“诗人模仿”功能。
首先利用一个简单的筛选判断，自动把需要模仿的诗人的数据提取出来：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd1123d3f882268.png&#34; alt=&#34;&#34; /&gt;
只需修改poets列表内容，即可提取任何你想要的诗人数据。
使用的数据是我之前处理过的干净数据。
然后是训练模型，用[]标志诗位置，喂给搭建好的模型。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd123800f166302.png&#34; alt=&#34;&#34; /&gt;
250个epoch即可基本拟合。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd12bb94e743653.png&#34; alt=&#34;&#34; /&gt;
如上，按照字频来选择，这样概率大的输出概率也更加大。添加随机性的同时保证了诗歌质量。
自由写诗生成generateNum这么多首诗，每首诗以左中括号开始，以右中括号或空格结束，每次生成的prob用probsToWord方法转成字。
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd145d611d92850.png&#34; alt=&#34;&#34; /&gt;
生成完整诗歌后使用output来使输出更美观：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd15745fc590187.png&#34; alt=&#34;&#34; /&gt;
藏头诗也很简单，根据标点符号指点诗歌开头为用户输入的字，在模型输出后面的字即可。
流程图如下：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd1c39764d68495.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-lyrics-writer-1&#34;&gt;2. lyrics_writer&lt;/h4&gt;

&lt;p&gt;训练数据使用的是爬取并处理后的歌词和现代诗。
使用的了sequence-to-sequence模型以及RNN网络进行歌词语义的学习以及建模，和之前的模型相似。
参数设置：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd1877ce9d12252.png&#34; alt=&#34;&#34; /&gt;
关于生成诗歌模块：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd1a1188a822240.png&#34; alt=&#34;&#34; /&gt;
引入随机长度，增加诗歌和歌词的随机性，然后采用了正态分布的概率来生成每个字。&lt;/p&gt;

&lt;h2 id=&#34;四-结果分析&#34;&gt;四、结果分析&lt;/h2&gt;

&lt;h3 id=&#34;规则写诗结果分析&#34;&gt;规则写诗结果分析&lt;/h3&gt;

&lt;h4 id=&#34;1-选择五言绝句-从头到尾每个字都符合平仄的唐诗&#34;&gt;1．选择五言绝句、从头到尾每个字都符合平仄的唐诗：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd1e0c96e613129.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-自定义韵脚-每个字都严格符合平仄要求的宋诗&#34;&gt;2．自定义韵脚、每个字都严格符合平仄要求的宋诗：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd223d691427752.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;3-指定词牌名作的宋词&#34;&gt;3．指定词牌名作的宋词：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd23aae92c79415.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd2455892f37026.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;4-指定行数的诗经&#34;&gt;4．指定行数的诗经：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd272b12e419468.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;5-指定句数的现代诗&#34;&gt;5． 指定句数的现代诗 ：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd2b6028ae22622.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd2f7203f459580.png&#34; alt=&#34;&#34; /&gt;
我最喜欢的是这首：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd2c48505d36673.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;6-自定义模式的唐诗-宋词-宋诗-诗经和现代诗&#34;&gt;6．自定义模式的唐诗、宋词、宋诗、诗经和现代诗：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;自定义格式藏头、藏尾、藏字诗：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd3254c23986672.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd3436408c32567.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;自定义格式的宋词：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd36fa0f0c40344.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自定义格式的诗经：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd37f0426518217.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自定义格式的现代诗：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd39f13dc799060.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;机器学习写诗结果分析&#34;&gt;机器学习写诗结果分析&lt;/h3&gt;

&lt;h4 id=&#34;chinese-poem-模仿诗人&#34;&gt;Chinese_poem  &amp;ndash;模仿诗人&lt;/h4&gt;

&lt;p&gt;模仿李白风格：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd3c83be3c65295.png&#34; alt=&#34;&#34; /&gt;
的确从遣词造句上有一股诗仙的侠气和酒气。
李白的藏头词：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd3d2f0b4d34062.png&#34; alt=&#34;&#34; /&gt;
再来学习杜甫：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd3df2a7d246565.png&#34; alt=&#34;&#34; /&gt;
能够明显读出忧国忧民、感时伤事的情怀。
程序默认诗人为李白，传入 -p 参数即可指定其他诗人。&lt;/p&gt;

&lt;h4 id=&#34;lyrics-writer-作词家&#34;&gt;lyrics_writer  &amp;ndash;作词家&lt;/h4&gt;

&lt;p&gt;Ta分类学习了网易云所有男歌手、女歌手和乐队组合的歌曲，也可以进行现代诗创作。
歌词风格华语男歌手：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd4012921f52100.png&#34; alt=&#34;&#34; /&gt;
女歌手：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd40e76c5589317.png&#34; alt=&#34;&#34; /&gt;
0表示训练，1表示写歌词。cd参数传入语料库名称。
这个model训练次数比较少（主要因为数据量太大，训练巨慢），尚未拟合。
因为歌词里面关于爱情的字眼非常多，所以这个模型训练出来最喜欢“谈情说爱”，也就显得有那么一点“人工智障”的意味；生成歌词的长度也比较短。&lt;/p&gt;

&lt;h4 id=&#34;poet-master&#34;&gt;poet_master&lt;/h4&gt;

&lt;p&gt;机器学习创作自由诗、押韵诗、藏头诗、藏字诗。
- 自由创作：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd5844471a20882.png&#34; alt=&#34;&#34; /&gt;
上面这首诗读起来颇有一番韵味，似乎在感叹嫦娥的身世浮沉。
- 押韵诗：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd5af285bc51807.png&#34; alt=&#34;&#34; /&gt;
- 藏头押韵诗：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd5c8b632b32360.png&#34; alt=&#34;&#34; /&gt;
上面这首诗也颇有几分年老体病的诗人，在人生弥留之际，回忆往事纷扰，感慨人生飞逝、世殊时异的伤怀意味。
- 藏字押韵诗：
&lt;img src=&#34;https://i.loli.net/2019/07/27/5d3bd5de0cfab54341.png&#34; alt=&#34;&#34; /&gt;
可以看到，算法最大化的将输入的句子嵌入了诗中。
生成的诗歌不具有深刻语义、且上下文联系不紧密。&lt;/p&gt;

&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;综合这上面的demo，比较之下，我们的规则写诗做到了：指定格式、押韵、平仄、藏头、藏尾、藏字、自定义格式等。
而机器学习写诗做到了指定格式、押韵、藏头、藏字、模仿诗人、以及更高级的语义分析、联想作诗还有更复杂文本的生成等。&lt;/p&gt;

&lt;p&gt;参考项目：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hjptriplebee/Chinese_poem_generator&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/hjptriplebee/Chinese_poem_generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/norybaby/poet&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/norybaby/poet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更高级的机器学习写诗，可以参考清华的&lt;a href=&#34;http://jiuge.thunlp.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;九歌&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>